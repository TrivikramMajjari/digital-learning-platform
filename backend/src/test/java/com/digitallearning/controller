package com.digitallearning.controller;

import com.digitallearning.dto.LoginRequest;
import com.digitallearning.dto.SignupRequest;
import com.digitallearning.model.User;
import com.digitallearning.service.UserService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.http.ResponseEntity;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

class AuthControllerTest {

    @InjectMocks
    private AuthController authController;

    @Mock
    private UserService userService;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testLogin() {
        LoginRequest loginRequest = new LoginRequest("testUser", "testPassword");
        when(userService.authenticate(any())).thenReturn("mockJwtToken");

        ResponseEntity<String> response = authController.login(loginRequest);

        assertEquals(200, response.getStatusCodeValue());
        assertEquals("mockJwtToken", response.getBody());
        verify(userService, times(1)).authenticate(loginRequest);
    }

    @Test
    void testRegister() {
        SignupRequest signupRequest = new SignupRequest("testUser", "testPassword");
        when(userService.register(any())).thenReturn(new User());

        ResponseEntity<String> response = authController.register(signupRequest);

        assertEquals(201, response.getStatusCodeValue());
        verify(userService, times(1)).register(signupRequest);
    }
}